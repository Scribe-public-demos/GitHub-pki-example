name: fs-tracker-vue-project-ci-workflow

env:
  FS_DIGEST: ":v0.0.21"
  FS_NAME: fs-tracker-${{ github.run_id }}
  FS_DIR: /tmp/fs-tracker-${{ github.run_id }}

on:
  workflow_dispatch:

jobs:
  fs-tracker-vue-project-ci-job:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
#       - name: Use Node.js 18.x
#         id: use-node.js-18.x
#         env:
#           STEP_NAME: Use Node.js 18.x
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.x
          
      - name: Create fs-tracker work dir and rules file
        id: create-fs-tracker-work-dir-and-rules-file
        env:
          STEP_NAME: Create fs-tracker work dir and rules file
        run: |
          mkdir -p $FS_DIR
          echo '{"ALL": {"filters": {"events": ["all"]}}}' > $FS_DIR/rules.json

      - name: Start fs-tracker container
        id: start-fs-tracker-container
        env:
          STEP_NAME: Start fs-tracker container
        run: >
          docker run -d 
          --privileged 
          --pid=host 
          --userns=host
          --name $FS_NAME
          -v /proc:/proc 
          -v /etc/passwd:/etc/passwd 
          -v $FS_DIR:/work 
          -w /work 
          scribesecuriy.jfrog.io/scribe-docker-public-local/fs-tracker$FS_DIGEST 
          -f jsonl

      - name: Wait for fs-tracker initialisation
        id: fs-tracker-initialization
        env:
          STEP_NAME: Wait for fs-tracker initialisation
        run: |
          while [ $(docker container inspect $FS_NAME --format {{.State.Status}}) == "running" ]
          do
            if docker logs $FS_NAME 2>/dev/null | grep '^Ready!' >/dev/null
            then
              echo Ready!
              break
            fi
            sleep 1
          done

      - name: Clone repo
        id: clone-repo
        env:
          STEP_NAME: Clone repo
        uses: actions/checkout@v3

      - name: Install app dependencies
        env:
          STEP_NAME: Install app dependencies
        run: npm install

      - name: Build app
        id: build-app
        env:
          STEP_NAME: Build app
        run: npm run build

      - name: Compress build artifacts
        id: compress-build-artifacts
        env:
          STEP_NAME: Compress build artifacts
        run: |
          tar -cJf dist.tar.xz dist

      - name: Archive build artifacts
        id: archive-build-artifacts
        env:
          STEP_NAME: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            dist.tar.xz

      - name: Stop fs-tracker
        id: stop-fs-tracker
        env:
          STEP_NAME: Stop fs-tracker
        run: |
          docker stop $FS_NAME
          docker logs $FS_NAME
          EXIT_CODE=$(docker wait $FS_NAME)
          docker rm --force $FS_NAME

      - name: Compress fs-tracker logs
        id: compress-fs-tracker-logs
        env:
          STEP_NAME: Compress fs-tracker logs
        run: |
          tar -cJf $FS_DIR/fs-tracker-logs.tar.xz -C $FS_DIR processes.json events.json

      - name: Archive fs-tracker logs
        id: archive-fs-tracker-logs
        env:
          STEP_NAME: Archive fs-tracker logs
        uses: actions/upload-artifact@v3
        with:
          name: fs-tracker-logs
          path: |
            ${{ env.FS_DIR }}/fs-tracker-logs.tar.xz
