name: build-in-docker

env:
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  IMAGE_NAME: ${{ github.repository }}:${{ github.sha }}
  AUTH0_DOMAIN: scribe-hub-production.us.auth0.com
  AUTH0_SCRIBE_SERVICE_AUDIENCE: api.production.scribesecurity.com
  SCRIBE_API_BASE_URI: https://airflow.scribesecurity.com
  LOGICAL_APP_NAME: avocado-project
  AUTHOR_NAME: Guy-Chernobrov
  AUTHOR_EMAIL: gc@scribesecurity.com
  AUTHOR_PHONE: 052-9281309
  SUPPLIER_NAME: Scribe-Security
  SUPPLIER_URL: www.scribesecurity.com
  SUPPLIER_EMAIL: info@scribesecurity.com
  SUPPLIER_PHONE: 001-001-0011
  USER_DATA: service-binding
  
on:
  workflow_dispatch:

jobs:
  checkout-attest-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
        
      - name: Generate signed SBOM for repo content clone
        uses: scribe-security/action-bom@dev
        with:
           target: 'git:.'
           scribe-enable: true
           scribe-login-url: https://$AUTH0_DOMAIN
           scribe-auth-audience: $AUTH0_SCRIBE_SERVICE_AUDIENCE
           scribe-url: $SCRIBE_API_BASE_URI
           product-key:  $LOGICAL_APP_NAME-2
           scribe-client-id: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_ID }}
           scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
           format: attest
           verbose: 2
           components: packages,files,dep
           app-name: $LOGICAL_APP_NAME
           app-version: 1-24-${{github.run_number}}
           author-name: $AUTHOR_NAME
           author-email: $AUTHOR_EMAIL
           author-phone: $AUTHOR_PHONE
           supplier-name: $SUPPLIER_NAME
           supplier-url: $SUPPLIER_URL
           supplier-email: $SUPPLIER_EMAIL 
           supplier-phone: $SUPPLIER_PHONE

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        run: echo "${DOCKER_TOKEN}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build -f orig-Dockerfile --push --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/scribe-training-app:${{ github.sha }} .
  image-attest:
      needs: checkout-attest-build
      runs-on: ubuntu-latest
      permissions:
         contents: read
         packages: write
         id-token: write
      steps:     
      - name: Generate SLSA Provenance docker image
        id: gensbom_slsa
        uses: scribe-security/action-bom@dev
        with:
           target: 'scribesecurity/scribe-training-app:${{ github.sha }}'
           scribe-enable: true
           scribe-login-url: https://$AUTH0_DOMAIN
           scribe-auth-audience: $AUTH0_SCRIBE_SERVICE_AUDIENCE
           scribe-url: $SCRIBE_API_BASE_URI
           product-key: $LOGICAL_APP_NAME-2
           scribe-client-id: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_ID }}
           scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
           format: attest-slsa
           verbose: 2
           components: packages,files,dep
           app-name: $LOGICAL_APP_NAME
           app-version: 1-24-${{github.run_number}}
           author-name: $AUTHOR_NAME
           author-email: $AUTHOR_EMAIL
           author-phone: $AUTHOR_PHONE
           supplier-name: $SUPPLIER_NAME
           supplier-url: $SUPPLIER_URL
           supplier-email: $SUPPLIER_EMAIL 
           supplier-phone: $SUPPLIER_PHONE
           env: USER_DATA
      - name: Generate signed SBOM for docker image
        uses: scribe-security/action-bom@dev
        with:
           target: 'scribesecurity/scribe-training-app:${{ github.sha }}'
           scribe-enable: true
           scribe-login-url: https://$AUTH0_DOMAIN
           scribe-auth-audience: $AUTH0_SCRIBE_SERVICE_AUDIENCE
           scribe-url: $SCRIBE_API_BASE_URI
           product-key: $LOGICAL_APP_NAME-2
           scribe-client-id: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_ID }}
           scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
           format: attest
           verbose: 2
           components: packages,files,dep
           app-name: $LOGICAL_APP_NAME
           app-version: 1-24-${{github.run_number}}
           author-name: $AUTHOR_NAME
           author-email: $AUTHOR_EMAIL
           author-phone: $AUTHOR_PHONE
           supplier-name: $SUPPLIER_NAME
           supplier-url: $SUPPLIER_URL
           supplier-email: $SUPPLIER_EMAIL 
           supplier-phone: $SUPPLIER_PHONE
           env: USER_DATA

           
      
          
           
      - uses: actions/upload-artifact@v2
        with:
          name: provenance
          path: ${{ steps.gensbom_slsa.outputs.OUTPUT_PATH }}    
    
           
           
  
           
