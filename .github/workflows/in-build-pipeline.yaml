name: build-in-pipeline

env:
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
  IMAGE_NAME: ${{ github.repository }}:${{ github.sha }}
  LOGICAL_APP_NAME: Oreange-Logger
  VALINT_BOM_AUTHOR_NAME: Guy-Chernobrov
  VALINT_BOM_AUTHOR_EMAIL: gc@scribesecurity.com
  VALINT_BOM_AUTHOR_PHONE: 052-9281309
  VALINT_BOM_SUPPLIER_NAME: Scribe-Security
  VALINT_BOM_SUPPLIER_URL: www.scribesecurity.com
  VALINT_BOM_SUPPLIER_EMAIL: info@scribesecurity.com
  VALINT_BOM_SUPPLIER_PHONE: 001-001-0011
  INTEGRATION_TEST: 600s
  
  
on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

concurrency: 
  group: build-in-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checkout-attest:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        id-token: write
    steps:     
    - name: Checkout repository
      uses: actions/checkout@v3
  
    - name: Generate signed SBOM for repo content clone
      uses: scribe-security/action-bom@dev
      with:
          target: 'git:.'
          scribe-enable: true
          product-key: $LOGICAL_APP_NAME-1
          scribe-client-id: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_ID }}
          scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
          format: attest
          components: packages,files,dep
          app-name: $LOGICAL_APP_NAME
          app-version: ${{github.run_number}}

  build:
    # needs: [checkout-attest]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build
           
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        run: echo "${DOCKER_TOKEN}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker buildx build --push --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/scribe-training-app:${{ github.sha }} .

  integration-test:
      needs: build
      runs-on: ubuntu-latest
      permissions:
         contents: read
         id-token: write
      steps:
      - name: integration-test
        run: sleep ${{ env.INTEGRATION_TEST }}
        shell: bash

  image-attest:
      needs: build
      runs-on: ubuntu-latest
      permissions:
         contents: read
         id-token: write
      steps:     
      - name: Checkout repository
        uses: actions/checkout@v3
   
      - name: Generate signed SBOM for docker image
        uses: scribe-security/action-bom@dev
        with:
           target: 'scribesecurity/scribe-training-app:${{ github.sha }}'
           scribe-enable: true
           product-key:  $LOGICAL_APP_NAME-1
           scribe-client-id: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_ID }}
           scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
           format: attest
           app-name: $LOGICAL_APP_NAME
           app-version: ${{github.run_number}} 

  verify-policy:
    needs: 
    - integration-test
    - checkout-attest
    - image-attest
    uses: ./.github/workflows/.reuse-policy.yaml
    secrets:
      scribe-client-id: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_ID  }}
      scribe-client-secret: ${{ secrets.SCRIBE_DEV_M2M_CLIENT_SECRET }}
      SUPERSET_USERNAME: ${{ secrets.SUPERSET_USERNAME }}
      SUPERSET_PASSWORD: ${{ secrets.SUPERSET_PASSWORD }}
    with:
      app-name: marsh-training
      app-version: ${{github.run_number}} 
      target: scribesecurity/scribe-training-app:${{ github.sha }}
  
  finalize:
    needs: 
    - integration-test
    - verify-policy
    runs-on: ubuntu-latest
    permissions:
        contents: read
        id-token: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
